---
apiVersion: batch/v1
kind: Job
metadata:
  name: lab-dns-mysql-sync-job
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    app: lab-pdns-mysql
spec:
  template:
    spec:
      # kubectl create secret docker-registry rh-pull-secret --docker-server=registry.redhat.io --docker-username=$RH_REG_USER --docker-password=$RH_REG_TOKEN --docker-email=ken@kenmoini.com -n lab-dns-mysql
      imagePullSecrets:
        - name: rh-pull-secret
      containers:
      - name: lab-dns-mysql-sync-job
        image: registry.redhat.io/openshift4/ose-cli:latest
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - |
            #!/usr/bin/env bash

            kubectl wait --for=condition=ready pod -n lab-dns-mysql -l app=lab-pdns-mysql --timeout=300s

            until kubectl exec -n lab-dns-mysql -it lab-pdns-mysql-0 -- sh -c 'mysqladmin -u $MYSQL_USER --password=$MYSQL_PASSWORD ping 2>&1 | grep -v "Warning"'
            do
              echo "Waiting for MySQL to start..."
              sleep 5
            done

            kubectl exec -n lab-dns-mysql -it lab-pdns-mysql-0 -- sh -c 'mysql -u $MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE < /opt/app-root/src/mysql-init/schema.sql'
            kubectl exec -n lab-dns-mysql -it lab-pdns-mysql-0 -- sh -c 'mysql -u $MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE < /opt/app-root/src/mysql-init/enable_fkeys.sql'
            kubectl exec -n lab-dns-mysql -it lab-pdns-mysql-0 -- sh -c 'mysqlshow -u $MYSQL_USER --password=$MYSQL_PASSWORD $MYSQL_DATABASE;'

      serviceAccountName: lab-dns-mysql-sync-job
      restartPolicy: OnFailure