---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lab-pdns-mysql
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  labels:
    app: lab-pdns-mysql
spec:
  serviceName: lab-pdns-mysql
  replicas: 1
  selector:
    matchLabels:
      app: lab-pdns-mysql
  template:
    metadata:
      labels:
        app: lab-pdns-mysql
    spec:
      # kubectl create secret docker-registry ghcr-pull-secret --docker-server=ghcr.io --docker-username=kenmoini --docker-password=$REG_TOKEN --docker-email=ken@kenmoini.com -n lab-dns-mysql
      # kubectl delete pod -n lab-dns-mysql lab-pdns-mysql-0
      imagePullSecrets:
        - name: ghcr-pull-secret
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - lab-pdns-mysql
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 27
        fsGroup: 27
      terminationGracePeriodSeconds: 10
      containers:
        - name: lab-pdns-mysql
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.25"
            limits:
              memory: "512Mi"
              cpu: "0.5"
          image: ghcr.io/kenmoini/lab-powerdns:mysql-f65d6e2
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql
              mountPath: /var/lib/mysql/data
      volumes:
        - name: mysql
          emptyDir:
            medium: "" #accepted values:  empty str (means node's default medium) or Memory
            sizeLimit: 1Gi
  #volumeClaimTemplates:
  #  - metadata:
  #      name: mysql
  #    spec:
  #      accessModes:
  #        - ReadWriteOnce
  #      storageClassName: my-storage-class
  #      resources:
  #        requests:
  #          storage: 1Gi
